version: '3'

services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - emote-network

  emote-generator:
    build: ./emote-generator
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=raw-emote-data
    networks:
      - emote-network

  server-b:
    build: ./server-b
    ports:
      - "3001:3001"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC_IN=raw-emote-data
      - KAFKA_TOPIC_OUT=aggregated-emote-data
      - PORT=3001
    networks:
      - emote-network

  server-a:
    build: ./server-a
    ports:
      - "3002:3002"
    depends_on:
      kafka:
        condition: service_healthy
      server-b:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=aggregated-emote-data
      - PORT=3002
    networks:
      - emote-network

  frontend:
    build: ./frontend
    ports:
      - "8080:80"
    depends_on:
      - server-a
      - server-b
    environment:
      - WEBSOCKET_URL=ws://localhost:3002
      - API_URL=http://localhost:3001
    networks:
      - emote-network

networks:
  emote-network:
    driver: bridge
